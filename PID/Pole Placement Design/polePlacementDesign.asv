close all; clc; clear;
s = tf('s');
%IMC can be described as Cimc = Gc/(1-(Gc*Pm))
%Y = Cimc*P/(1+Cimc*P)
%usando um filtro passa baixa e um Pm = Pe-1 aproximado temos: Gc = Fpb*Pm
%Cimc = (1+0.5*L*s)*T*(1+s*T)/((Tf+L)*Kp*s*T*(1+(0.5*Tf*L/(Tf+L)))
%Para aproxima√ßao Pm = Kp*(1-s*L/2)/((1+T*s)*(1+s*L/2))
P = 1/(1+1.5*s);
L = 0.5;
P.OutputDelay = L;
%constantes e ganhos
Kp = 1;
T = 1.5;
Ti = T;
Td = 0.5*L;
Tf = 0.6;%parametro de sintonia do controlador
To = 0.2;
Kx = 2*T/((L+4*To)*Kp);
alpha = 4*To^2/((L+4*To)*L);
C = Kx*(1+T*s)*(1+0.5*L*s)/(T*s*(1+0.5*alpha*L*s));
Pm = Kp*(1-s*L*0.5)/((1+s*T)*(1+0.5*s*L));
%Cimc = T*(1+s*T)*(1+0.5*s*L)/((Tf+L)*Kp*s*T*(1+(0.5*Tf*L*s/(Tf+L))));
%% Simulation

% parameters
Tsim = 10;
Tdist = 5;
AmpDist = -0.8;

sim_02 = sim('SpolePlacementDesign.slx');
To = 0.3;
Kx = 2*T/((L+4*To)*Kp);
alpha = 4*To^2/((L+4*To)*L);
C = Kx*(1+T*s)*(1+0.5*L*s)/(T*s*(1+0.5*alpha*L*s));
Pm = Kp*(1-s*L*0.5)/((1+s*T)*(1+0.5*s*L));
sim_03 = sim('SpolePlacementDesign.slx');


figure
subplot(2,1,1)
plot(sim_02.y, 'r', 'linewidth', 2)       
hold on
plot(sim_03.y, '--k', 'linewidth', 1)
grid on
axis tight
legend('Output, y(t) 0.2','Output, y(t) 0.3', 'location', 'best')
subplot(2,1,2)
plot(sim_02.u, 'b', 'linewidth', 1)
hold on
plot(sim_03.u, '--k', 'linewidth', 1)
grid on
axis tight
legend('Output, u(t) 0.2','Output u(t) 0.3', 'location', 'best') 